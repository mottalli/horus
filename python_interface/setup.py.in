#!/usr/bin/python
from distutils.core import setup, Extension
import sys
import os
import fnmatch

USE_CUDA = ("${USE_CUDA}".upper() == 'ON')

SOURCES = ['horus.i']
dir = '../src/'
archivos = os.listdir(dir)
for archivo in archivos:
	if fnmatch.fnmatch(archivo, '*.cpp') and archivo <> 'main.cpp':
		SOURCES.append(os.path.join(dir, archivo))

LIBRARIES = ['cv', 'cxcore', 'highgui']

options = {
	'sources': SOURCES,
	'libraries': LIBRARIES,
	'swig_opts': ['-c++'],
	'library_dirs': ['.'],
	'include_dirs': []
}

if USE_CUDA:
	# TODO: clean this up if possible!
	options['library_dirs'].append('${CUDASDK_LIBS}')
	options['library_dirs'].append(os.path.dirname('${CUDA_CUDART_LIBRARY}'))
	options['include_dirs'].append('${CUDASDK_INC}')
	options['libraries'].append('horus_cuda')	# Note: libhorus_cuda.a is generated by the Makefile!!!
	options['libraries'].append('cutil_x86_64')
	options['libraries'].append('cudart')
	
if os.name == 'posix':
	pass
elif os.name == 'nt':
	options['include_dirs'].append('c:\\Archivos de programa\\opencv\\__include')
	options['library_dirs'].append('c:\\Archivos de programa\\opencv\\lib')
else:
	raise Exception("Unsuported platform")

horus_ext = Extension('_horus', **options)

setup(name="horus",
	  version="0.1",
	  author="Marcelo L. Mottalli",
	  ext_modules=[horus_ext],
	  py_modules=["horus"]
	)
